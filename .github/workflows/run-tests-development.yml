name: Test development environment

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    environment: development
    # Only run this workflow on the develop branch
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build project
        run: NODE_ENV=production npm run build
        env:
          WORDPRESS_URL: ${{ vars.WORDPRESS_URL }}
          NEXT_URL: ${{ vars.NEXT_URL }}
          WORDPRESS_ADMIN_USER: ${{ vars.WORDPRESS_ADMIN_USER }}
          WORDPRESS_ADMIN_PASSWORD: ${{ secrets.WORDPRESS_ADMIN_PASSWORD }}

      - name: Install Puppeteer dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3-dev \
            libatk-bridge2.0-dev \
            libdrm-dev \
            libxkbcommon-dev \
            libgbm-dev \
            libasound2-dev \
            ffmpeg

      - name: Install Google Chrome
        run: |
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Check Chrome installation
        run: |
          google-chrome --version
          which google-chrome

      - name: Run all tests
        run: npm run test:all
        env:
          CI: true
          VIDEO_RECORD: true
          WORDPRESS_URL: ${{ vars.WORDPRESS_URL }}
          NEXT_URL: ${{ vars.NEXT_URL }}
          WORDPRESS_ADMIN_USER: ${{ vars.WORDPRESS_ADMIN_USER }}
          WORDPRESS_ADMIN_PASSWORD: ${{ secrets.WORDPRESS_ADMIN_PASSWORD }}

      - name: Upload test videos on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-failure-videos
          path: |
            src/__tests__/video-logs/
          retention-days: 7

      - name: Comment on failure with video info
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚ùå **End to end Tests Failed**
              
              To view the video recordings:
              1. Go to the "Summary" tab of this workflow run
              2. Download and extract the "test-failure-videos" artifact to see what went wrong.`
            })

      - name: List generated videos
        if: always()
        run: |
          echo "Generated test videos:"
          ls -la src/__tests__/video-logs/ || echo "No video-logs directory found"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            coverage/
            src/__tests__/video-logs/
          retention-days: 30
